#include "headers/Conexion.h"

const char* LOSANT_DEVICE_ID = "60a6c59e6b358000068b3a38";
LosantDevice device(LOSANT_DEVICE_ID);

byte mins[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
                21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
                41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
                61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
                81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,
                101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120};

byte temps[] = {20,27,42,55,70,85,103,120,127,145,166,188,203,215,225,225,220,210,207,200,205,
                207,210,210,211,210,211,211,210,210,210,210,210,209,209,209,209,210,209,210,209,
                209,210,209,209,209,209,209,210,209,209,211,210,209,209,209,210,211,209,210,211,
                211,210,209,209,210,209,211,210,209,211,209,211,209,210,209,211,210,210,210,209,
                210,209,209,210,209,210,210,209,211,210,211,209,210,210,211,211,210,209,211,210,
                211,211,210,210,210,210,211,210,210,211,211,211,210,211,210,210,209,211,211,211};

byte extr[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,35,35,36,
                34,34,35,34,34,35,36,35,35,36,35,36,34,36,34,35,35,35,34,34,
                35,35,35,36,34,34,35,35,34,36,34,35,34,34,34,34,35,34,35,34,
                36,35,36,36,34,34,36,36,36,34,34,34,36,36,35,36,34,34,34,35,
                36,34,36,36,34,35,35,36,35,35,36,36,34,34,36,36,35,36,36,34,
                36,34,36,36,36,35,35,34,35,36,35,35,35,35,34,34,34,35,34,35};

byte trit[] = {10,35,33,37,33,33,37,37,33,37,36,33,33,34,35,36,36,35,36,33,35,
                34,37,33,34,36,36,35,34,33,36,34,35,36,36,37,36,34,35,34,36,36,
                36,36,37,34,34,37,33,35,35,33,35,34,33,37,36,36,37,34,37,34,37,
                36,35,33,36,36,36,36,34,37,37,34,37,33,33,35,37,33,15,12,10,5,
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

float metr[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.21,2.42,3.63,4.85,
                6.06,7.27,8.48,9.69,10.9,12.11,13.33,14.54,15.75,16.96,18.17,19.38,20.59,21.8,23.02,24.23,25.44,26.65,27.86,29.07,
                30.28,31.5,32.71,33.92,35.13,36.34,37.55,38.76,39.98,41.19,42.4,43.61,44.82,46.03,47.24,48.46,49.67,50.88,52.09,53.3,
                54.51,55.72,56.94,58.15,59.36,60.57,61.78,62.99,64.2,65.41,66.63,67.84,69.05,70.26,71.47,72.68,73.89,75.11,76.32,77.53,
                78.74,79.95,81.16,82.37,83.59,84.8,86.01,87.22,88.43,89.64,90.85,92.07,93.28,94.49,95.7,96.91,98.12,99.33,100.54,101.76,
                102.97,104.18,105.39,106.6,107.81,109.02,110.24,111.45,112.66,113.87,115.08,116.29,117.5,118.72,119.93,121.14,122.35,123.56,124.77,125.98};

float grm[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16.67,33.33,50,66.67,83.33,
                100,116.67,133.33,150,166.67,183.33,200,216.67,233.33,250,266.67,283.33,300,316.67,333.33,350,366.67,383.33,400,416.67,
                433.33,450,466.67,483.33,500,516.67,533.33,550,566.67,583.33,600,616.67,633.33,650,666.67,683.33,700,716.67,733.33,750,
                766.67,783.33,800,816.67,833.33,850,866.67,883.33,900,916.67,933.33,950,966.67,983.33,1000,1016.67,1033.33,1050,1066.67,
                1083.33,1100,1116.67,1133.33,1150,1166.67,1183.33,1200,1216.67,1233.33,1250,1266.67,1283.33,1300,1316.67,1333.33,1350,
                1366.67,1383.33,1400,1416.67,1433.33,1450,1466.67,1483.33,1500,1516.67,1533.33,1550,1566.67,1583.33,1600,1616.67,1633.33,
                1650,1666.67,1683.33,1700,1716.67,1733.33};

void handleCommand(LosantCommand *command) 
{
    Serial.print("Command received: ");
    Serial.println(command->name);
}

Conexion::Conexion()
{
    //LosantDevice device(LOSANT_DEVICE_ID);
    init();
}

void Conexion::init()
{
    WiFi.mode(WIFI_AP_STA);
    device.onCommand(handleCommand);
}

bool Conexion::autoConnect(void)
{
    Serial.println("Conexion Wifi");
    bool banderaConexion = true;
    byte contLosant=0;
    wm.setDebugOutput(false);
    wm.setConfigPortalTimeout(120);
    if (!wm.autoConnect("Prueba Tesis"))
    {
        Serial.println("failed to connect and hit timeout"); 
        banderaConexion = false;
    }
    Serial.println("Conexion Losant");
    device.connect(wifiClient, LOSANT_ACCESS_KEY, LOSANT_ACCESS_SECRET);
    while(!device.connected()); 
    {
        delay(500);
        Serial.print(".");
    }
    banderaConexion = contLosant>=50 ? false : true;
    Serial.println("Connected!");
    return banderaConexion;
}

void Conexion::report()
{
    if(i>121)
    {
        i=0;
    }
    StaticJsonDocument<500> jsonBuffer;
    JsonObject root = jsonBuffer.to<JsonObject>();
    root["Tiempo"] = mins[i];
    root["Temperatura"] = temps[i];
    root["Extrusor"] = extr[i];
    root["Trituradora"] = trit[i];
    root["Filamento_m"] = metr[i];
    root["Filamento_g"] = grm[i];
    device.sendState(root);
    Serial.println("Reported!");
    i++;
}

